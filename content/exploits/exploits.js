const exploitData = [
    {
        name: "Securly IndexedDB Exploit",
        difficulty: "Easy",
        overview: `Honestly this is the stupidest exploit I’ve found. I found it while digging around chrome urls and figured out that Securly uses IndexedDB for storing websites that should be blocked.

TO DO THIS YOU NEED:
- Access to chrome://indexeddb-internals
- A blocking extension that uses IndexedDB (e.g., Securly)

Steps:
1. Go to chrome://indexeddb-internals
2. Scroll down till you see chrome-extension://(Securly extension ID)

Typical IDs:
- joflmkccibkooplaeoinecjbmdebglab
- iheobagjkfklnlikgihanlhcddjoihkg
- ckecmkbnoanpgplccmnoikfmpcdladkc

3. Click "Force Close"
4. And boom — no more blocked websites!

(To disable this exploit simply restart or turn on and off your device)

Securly may kick back in after a while, but you can just force close again.

EXTENSIONS CURRENTLY WORKING:
- Securly

EXTENSIONS NOT WORKING:
- GoGuardian
- Lightspeed
- Linewize
- Blocksi
- iBoss

FAQ:

Q: “The Securly extension ID you gave isn’t there”:
A: Go to chrome://extensions → Click on Securly → Check the ID → Recheck chrome://indexeddb-internals. If it’s still missing, this may have been patched.`,
    },
    {
        name: "Crimson",
        difficulty: "Hard",
        overview: `THIS IS NOT MY EXPLOIT!!! I wanted to share it with more people!
I added some of my own stuff to make it work better but most of it was copyed from ext-remover.

1) Esc+Refresh+Power and re-enroll (Enter recovery page), or you can just powerwash. (alternatively, you can push on the little arrow next to your name, and push "remove user")

2) Log into your Chromebook and immediately turn off WiFi 

3) Go to chrome://extensions, turn on WiFi, and wait for your school’s blocking extension to appear.

4) As soon as it appears, turn off WiFi and restart as fast as possible. (if this does not work for you, try waiting a second or two, I found this to work better)

5) Log back in, go back to extensions, and wait. If it says your blocking extension could be corrupted, then it worked (wait at least a minute with a close watch in case it comes back)

6) If it didn’t work, start over. You have to be fast, if it didn't show up as corupted,  it means the extension has not been downloaded yet, repeat steps 3 and 4.`
    },
    {
        name: "Extension Webview",
        difficulty: "Medium",
        overview: `This will only work if chrome://kill or chrome://crash isn’t blocked by policy and yes I know that this chrome://kill method is already known

1. Enable chromevox (ctrl+alt+z)

2. Then search+o+w, it should open a window

3. In google chrome go to search bar, type in chrome- it should auto complete and you should see the extension id in the search suggestions (log smth)

3. Enter the extension in google chrome, go to url press backspace, then chrome://kill or chrome://crash.

4. Go to extension webview and press learm more, then privacy policy, then google (on bottom of learn more website. Optionally, press ctrl+alt+z again to fix the screen.`
    }
];

function updateExploits() {
    const searchValue = document.getElementById("searchInput").value.toLowerCase();
    const sortValue = document.getElementById("sortSelect").value;

    let filtered = exploitData.filter(e =>
        e.name.toLowerCase().includes(searchValue)
    );

    filtered.sort((a, b) => {
        switch (sortValue) {
            case "name-asc":
                return a.name.localeCompare(b.name);
            case "name-desc":
                return b.name.localeCompare(a.name);
            case "difficulty-asc":
                return difficultyValue(a.difficulty) - difficultyValue(b.difficulty);
            case "difficulty-desc":
                return difficultyValue(b.difficulty) - difficultyValue(a.difficulty);
            default:
                return 0;
        }
    });

    renderExploits(filtered);
}

function difficultyValue(difficulty) {
    return { Easy: 1, Medium: 2, Hard: 3 }[difficulty] || 0;
}

function renderExploits(exploits) {
    const container = document.getElementById("exploits");
    container.innerHTML = "";

    exploits.forEach(exploit => {
        if (exploit && exploit.name) {
            const div = document.createElement("div");
            div.className = "exploit-card";
            div.innerHTML = `
                <h3>${escapeHTML(exploit.name)}</h3>
                <p><strong>Difficulty:</strong> ${escapeHTML(exploit.difficulty)}</p>
                <button onclick="openModal('${escapeHTML(exploit.name)}')">Open</button>
            `;
            container.appendChild(div);
        }
    });
}
function openModal(name) {
    const exploit = exploitData.find(e => e.name === name);
    if (!exploit) return;

    const overview = exploit.overview || "No overview available.";
    const code = exploit.code || "";

    document.getElementById("modalTitle").textContent = exploit.name;
    document.getElementById("modalDifficulty").textContent = exploit.difficulty;

    document.getElementById("modalOverview").innerHTML = escapeHTML(overview).replace(/\n/g, "<br>");
    document.getElementById("modalCode").innerHTML = escapeHTML(code).replace(/\n/g, "<br>");

    document.getElementById("exploitModal").classList.remove("hidden");
}

function closeModal() {
    document.getElementById("exploitModal").classList.add("hidden");
}

function escapeHTML(str) {
    return String(str)
        .replace(/&/g, "&amp;")
        .replace(/"/g, "&quot;")
        .replace(/'/g, "&#039;")
        .replace(/</g, "&lt;")
        .replace(/>/g, "&gt;");
}

document.addEventListener("DOMContentLoaded", () => {
    updateExploits();
});
